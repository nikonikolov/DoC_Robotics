Practical 5 TO DO:
    - Add sonar mounting offset to the measurement
    - return 0 from the distance estimation to wall if the particle is out of range
    - make the partcile distribution proportional to the distance moved by
    - compute the Standard Deviation and constant likelihood for the sonar and put them in MCL/mcl.py

    - fix the main in MCL/mcl.py - decide how often to run the MCL - check the 3.3 Waypoint Navigation

PARAMETERS TO TUNE:
    SONAR_CONSTANT_LIKELIHOOD =  
    SONAR_STD =
    UNSENSIBLE_READINNGS_THRESHOLD = 

    SENSOR_OFFSET = 6.5
    MAX_DIST = 85.0 - SENSOR_OFFSET 
    MIN_DIST = 20.0 - SENSOR_OFFSET 
    MAX_ANGLE = 34.0 * math.pi / 180.0

TO TEST:
    ARTIFICALLY WORSEN ODOMETRY AND TEST MCL


PID calibration
Acceleration calibration

Calibrartion of distance and rotation 
    - make sure to run after you have made proper PID and velocity calibration - you want the robot to be as fast as possible 
    - use some tape for the robot to draw on while the wheels are rotation on the actual floor


